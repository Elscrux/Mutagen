<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:xwpf="http://schemas.xceed.com/wpf/xaml/toolkit"
    xmlns:xwpfThemes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">

    <Color x:Key="TransparentGrayBackground">#18000000</Color>
    <Color x:Key="GrayHoveredBorder">#494949</Color>
    <Color x:Key="Purple">#281d52</Color>
    <Color x:Key="PaleYellow">#f7b992</Color>
    <Color x:Key="Salmon">#e16063</Color>
    <Color x:Key="LightSalmon">#fa7376</Color>
    <Color x:Key="WhiteSalmon">#ff999b</Color>
    <Color x:Key="DarkPurple">#211c4a</Color>

    <SolidColorBrush x:Key="DarkPurpleBrush" Color="{StaticResource DarkPurple}" />
    <SolidColorBrush x:Key="SalmonBrush" Color="{StaticResource Salmon}" />
    <SolidColorBrush x:Key="TransparentGrayBackgroundBrush" Color="{StaticResource TransparentGrayBackground}" />
    <SolidColorBrush x:Key="GrayHoverBorderBrush" Color="{StaticResource GrayHoveredBorder}" />
    <SolidColorBrush x:Key="PurpleBrush" Color="{StaticResource Purple}" />
    <SolidColorBrush x:Key="PaleYellowBrush" Color="{StaticResource PaleYellow}" />

    <Style x:Key="ReflectionSettingBorder" TargetType="Border">
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="Background" Value="{StaticResource TransparentGrayBackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource GrayHoverBorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="5" />
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource MahApps.Brushes.Gray}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsKeyboardFocusWithin" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.Setters>
                    <Setter Property="BorderBrush" Value="{StaticResource GrayHoverBorderBrush}" />
                </MultiTrigger.Setters>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ReflectionSettingName" TargetType="TextBlock">
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="MinWidth" Value="100" />
    </Style>

    <Style
        x:Key="ReflectionSettingButton"
        BasedOn="{StaticResource Noggog.Styles.Button}"
        TargetType="Button">
        <Style.Resources>
            <SolidColorBrush x:Key="ButtonNakedIconPressedForegroundBrush" Color="{StaticResource Salmon}" />
            <SolidColorBrush x:Key="ButtonNakedIconOverForegroundBrush" Color="{StaticResource LightSalmon}" />
        </Style.Resources>
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="{StaticResource PaleYellowBrush}" />
    </Style>

    <Style
        x:Key="CloseButton"
        BasedOn="{StaticResource Noggog.Styles.Button}"
        TargetType="Button">
        <Style.Resources>
            <SolidColorBrush x:Key="ButtonNakedIconOverForegroundBrush" Color="{StaticResource LightSalmon}" />
            <SolidColorBrush x:Key="ButtonNakedIconPressedForegroundBrush" Color="{StaticResource WhiteSalmon}" />
            <Style TargetType="TextBlock">
                <Setter Property="Foreground" Value="{StaticResource SalmonBrush}" />
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True" />
                            <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=Button}}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Foreground" Value="{StaticResource LightSalmonBrush}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                    <DataTrigger Binding="{Binding IsPressed, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                        <Setter Property="Foreground" Value="{StaticResource WhiteSalmonBrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
        </Style.Resources>
        <Setter Property="Foreground" Value="{StaticResource SalmonBrush}" />
    </Style>

    <Style x:Key="NoggogNumericUpDown" TargetType="{x:Type xwpf:InputBase}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static xwpfThemes:ResourceKeys.ControlNormalBorderKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Control">
                    <xwpf:ButtonSpinner
                        x:Name="PART_Spinner"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        AllowSpin="{Binding AllowSpin, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        ButtonSpinnerLocation="{Binding ButtonSpinnerLocation, RelativeSource={RelativeSource TemplatedParent}}"
                        IsTabStop="False"
                        ShowButtonSpinner="{Binding ShowButtonSpinner, RelativeSource={RelativeSource TemplatedParent}}">
                        <xwpf:WatermarkTextBox
                            x:Name="PART_TextBox"
                            MinWidth="20"
                            Padding="{TemplateBinding Padding}"
                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                            AcceptsReturn="False"
                            AutoMoveFocus="{Binding AutoMoveFocus, RelativeSource={RelativeSource TemplatedParent}}"
                            AutoSelectBehavior="{Binding AutoSelectBehavior, RelativeSource={RelativeSource TemplatedParent}}"
                            Background="Black"
                            BorderThickness="0"
                            ContextMenu="{TemplateBinding ContextMenu}"
                            FontFamily="{TemplateBinding FontFamily}"
                            FontSize="{TemplateBinding FontSize}"
                            FontStretch="{TemplateBinding FontStretch}"
                            FontStyle="{TemplateBinding FontStyle}"
                            FontWeight="{TemplateBinding FontWeight}"
                            Foreground="{TemplateBinding Foreground}"
                            IsTabStop="True"
                            IsUndoEnabled="{Binding IsUndoEnabled, RelativeSource={RelativeSource TemplatedParent}}"
                            MaxLength="{Binding MaxLength, RelativeSource={RelativeSource TemplatedParent}}"
                            TabIndex="{TemplateBinding TabIndex}"
                            TextAlignment="{Binding TextAlignment, RelativeSource={RelativeSource TemplatedParent}}"
                            TextWrapping="NoWrap"
                            Watermark="{Binding Watermark, RelativeSource={RelativeSource TemplatedParent}}"
                            WatermarkTemplate="{Binding WatermarkTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                    </xwpf:ButtonSpinner>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static xwpfThemes:ResourceKeys.ControlMouseOverBorderKey}}" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="False" />
                                <Condition Binding="{Binding AllowTextInput, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsReadOnly, RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="PART_TextBox" Property="IsReadOnly" Value="True" />
                        </DataTrigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter Property="BorderBrush" Value="{DynamicResource {x:Static xwpfThemes:ResourceKeys.ControlSelectedBorderKey}}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="PART_TextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=PART_TextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style
        x:Key="ReflectionIntSpinner"
        BasedOn="{StaticResource NoggogNumericUpDown}"
        TargetType="xwpf:InputBase">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="80" />
        <Setter Property="Background" Value="#FF000000" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
    </Style>
</ResourceDictionary>
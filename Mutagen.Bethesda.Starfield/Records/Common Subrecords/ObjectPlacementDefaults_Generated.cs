/*
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
 * Autogenerated by Loqui.  Do not manually change.
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 
*/
#region Usings
using Loqui;
using Loqui.Interfaces;
using Loqui.Internal;
using Mutagen.Bethesda.Binary;
using Mutagen.Bethesda.Plugins;
using Mutagen.Bethesda.Plugins.Binary.Headers;
using Mutagen.Bethesda.Plugins.Binary.Overlay;
using Mutagen.Bethesda.Plugins.Binary.Streams;
using Mutagen.Bethesda.Plugins.Binary.Translations;
using Mutagen.Bethesda.Plugins.Exceptions;
using Mutagen.Bethesda.Plugins.Internals;
using Mutagen.Bethesda.Plugins.Meta;
using Mutagen.Bethesda.Plugins.Records;
using Mutagen.Bethesda.Plugins.Records.Internals;
using Mutagen.Bethesda.Plugins.Records.Mapping;
using Mutagen.Bethesda.Starfield.Internals;
using Mutagen.Bethesda.Translations.Binary;
using Noggog;
using Noggog.StructuredStrings;
using Noggog.StructuredStrings.CSharp;
using RecordTypeInts = Mutagen.Bethesda.Starfield.Internals.RecordTypeInts;
using RecordTypes = Mutagen.Bethesda.Starfield.Internals.RecordTypes;
using System.Buffers.Binary;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Reactive.Disposables;
using System.Reactive.Linq;
#endregion

#nullable enable
namespace Mutagen.Bethesda.Starfield
{
    #region Class
    public partial class ObjectPlacementDefaults :
        IEquatable<IObjectPlacementDefaultsGetter>,
        ILoquiObjectSetter<ObjectPlacementDefaults>,
        IObjectPlacementDefaults
    {
        #region Ctor
        public ObjectPlacementDefaults()
        {
            CustomCtor();
        }
        partial void CustomCtor();
        #endregion

        #region Versioning
        public ObjectPlacementDefaults.VersioningBreaks Versioning { get; set; } = default(ObjectPlacementDefaults.VersioningBreaks);
        #endregion
        #region Unknown1
        public Single Unknown1 { get; set; } = default(Single);
        #endregion
        #region Unknown2
        public Single Unknown2 { get; set; } = default(Single);
        #endregion
        #region Unknown3
        public Single Unknown3 { get; set; } = default(Single);
        #endregion
        #region Unknown4
        public Single Unknown4 { get; set; } = default(Single);
        #endregion
        #region Unknown5
        public Single Unknown5 { get; set; } = default(Single);
        #endregion
        #region Unknown6
        public Single Unknown6 { get; set; } = default(Single);
        #endregion
        #region Unknown7
        public Single Unknown7 { get; set; } = default(Single);
        #endregion
        #region Unknown8
        public Single Unknown8 { get; set; } = default(Single);
        #endregion
        #region Unknown9
        public Single Unknown9 { get; set; } = default(Single);
        #endregion
        #region Unknown10
        public Single Unknown10 { get; set; } = default(Single);
        #endregion
        #region Unknown11
        public Single Unknown11 { get; set; } = default(Single);
        #endregion
        #region Unknown12
        public Single Unknown12 { get; set; } = default(Single);
        #endregion
        #region Unknown13
        public Single Unknown13 { get; set; } = default(Single);
        #endregion
        #region Unknown14
        public Single Unknown14 { get; set; } = default(Single);
        #endregion
        #region Unknown15
        public Single Unknown15 { get; set; } = default(Single);
        #endregion
        #region Unknown16
        public Single Unknown16 { get; set; } = default(Single);
        #endregion
        #region Unknown17
        public Single Unknown17 { get; set; } = default(Single);
        #endregion
        #region Unknown18
        public Single Unknown18 { get; set; } = default(Single);
        #endregion
        #region Unknown19
        public Single Unknown19 { get; set; } = default(Single);
        #endregion
        #region Unknown20
        public Single Unknown20 { get; set; } = default(Single);
        #endregion

        #region To String

        public void Print(
            StructuredStringBuilder sb,
            string? name = null)
        {
            ObjectPlacementDefaultsMixIn.Print(
                item: this,
                sb: sb,
                name: name);
        }

        #endregion

        #region Equals and Hash
        public override bool Equals(object? obj)
        {
            if (obj is not IObjectPlacementDefaultsGetter rhs) return false;
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)this).CommonInstance()!).Equals(this, rhs, equalsMask: null);
        }

        public bool Equals(IObjectPlacementDefaultsGetter? obj)
        {
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)this).CommonInstance()!).Equals(this, obj, equalsMask: null);
        }

        public override int GetHashCode() => ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)this).CommonInstance()!).GetHashCode(this);

        #endregion

        #region Mask
        public class Mask<TItem> :
            IEquatable<Mask<TItem>>,
            IMask<TItem>
        {
            #region Ctors
            public Mask(TItem initialValue)
            {
                this.Versioning = initialValue;
                this.Unknown1 = initialValue;
                this.Unknown2 = initialValue;
                this.Unknown3 = initialValue;
                this.Unknown4 = initialValue;
                this.Unknown5 = initialValue;
                this.Unknown6 = initialValue;
                this.Unknown7 = initialValue;
                this.Unknown8 = initialValue;
                this.Unknown9 = initialValue;
                this.Unknown10 = initialValue;
                this.Unknown11 = initialValue;
                this.Unknown12 = initialValue;
                this.Unknown13 = initialValue;
                this.Unknown14 = initialValue;
                this.Unknown15 = initialValue;
                this.Unknown16 = initialValue;
                this.Unknown17 = initialValue;
                this.Unknown18 = initialValue;
                this.Unknown19 = initialValue;
                this.Unknown20 = initialValue;
            }

            public Mask(
                TItem Versioning,
                TItem Unknown1,
                TItem Unknown2,
                TItem Unknown3,
                TItem Unknown4,
                TItem Unknown5,
                TItem Unknown6,
                TItem Unknown7,
                TItem Unknown8,
                TItem Unknown9,
                TItem Unknown10,
                TItem Unknown11,
                TItem Unknown12,
                TItem Unknown13,
                TItem Unknown14,
                TItem Unknown15,
                TItem Unknown16,
                TItem Unknown17,
                TItem Unknown18,
                TItem Unknown19,
                TItem Unknown20)
            {
                this.Versioning = Versioning;
                this.Unknown1 = Unknown1;
                this.Unknown2 = Unknown2;
                this.Unknown3 = Unknown3;
                this.Unknown4 = Unknown4;
                this.Unknown5 = Unknown5;
                this.Unknown6 = Unknown6;
                this.Unknown7 = Unknown7;
                this.Unknown8 = Unknown8;
                this.Unknown9 = Unknown9;
                this.Unknown10 = Unknown10;
                this.Unknown11 = Unknown11;
                this.Unknown12 = Unknown12;
                this.Unknown13 = Unknown13;
                this.Unknown14 = Unknown14;
                this.Unknown15 = Unknown15;
                this.Unknown16 = Unknown16;
                this.Unknown17 = Unknown17;
                this.Unknown18 = Unknown18;
                this.Unknown19 = Unknown19;
                this.Unknown20 = Unknown20;
            }

            #pragma warning disable CS8618
            protected Mask()
            {
            }
            #pragma warning restore CS8618

            #endregion

            #region Members
            public TItem Versioning;
            public TItem Unknown1;
            public TItem Unknown2;
            public TItem Unknown3;
            public TItem Unknown4;
            public TItem Unknown5;
            public TItem Unknown6;
            public TItem Unknown7;
            public TItem Unknown8;
            public TItem Unknown9;
            public TItem Unknown10;
            public TItem Unknown11;
            public TItem Unknown12;
            public TItem Unknown13;
            public TItem Unknown14;
            public TItem Unknown15;
            public TItem Unknown16;
            public TItem Unknown17;
            public TItem Unknown18;
            public TItem Unknown19;
            public TItem Unknown20;
            #endregion

            #region Equals
            public override bool Equals(object? obj)
            {
                if (!(obj is Mask<TItem> rhs)) return false;
                return Equals(rhs);
            }

            public bool Equals(Mask<TItem>? rhs)
            {
                if (rhs == null) return false;
                if (!object.Equals(this.Versioning, rhs.Versioning)) return false;
                if (!object.Equals(this.Unknown1, rhs.Unknown1)) return false;
                if (!object.Equals(this.Unknown2, rhs.Unknown2)) return false;
                if (!object.Equals(this.Unknown3, rhs.Unknown3)) return false;
                if (!object.Equals(this.Unknown4, rhs.Unknown4)) return false;
                if (!object.Equals(this.Unknown5, rhs.Unknown5)) return false;
                if (!object.Equals(this.Unknown6, rhs.Unknown6)) return false;
                if (!object.Equals(this.Unknown7, rhs.Unknown7)) return false;
                if (!object.Equals(this.Unknown8, rhs.Unknown8)) return false;
                if (!object.Equals(this.Unknown9, rhs.Unknown9)) return false;
                if (!object.Equals(this.Unknown10, rhs.Unknown10)) return false;
                if (!object.Equals(this.Unknown11, rhs.Unknown11)) return false;
                if (!object.Equals(this.Unknown12, rhs.Unknown12)) return false;
                if (!object.Equals(this.Unknown13, rhs.Unknown13)) return false;
                if (!object.Equals(this.Unknown14, rhs.Unknown14)) return false;
                if (!object.Equals(this.Unknown15, rhs.Unknown15)) return false;
                if (!object.Equals(this.Unknown16, rhs.Unknown16)) return false;
                if (!object.Equals(this.Unknown17, rhs.Unknown17)) return false;
                if (!object.Equals(this.Unknown18, rhs.Unknown18)) return false;
                if (!object.Equals(this.Unknown19, rhs.Unknown19)) return false;
                if (!object.Equals(this.Unknown20, rhs.Unknown20)) return false;
                return true;
            }
            public override int GetHashCode()
            {
                var hash = new HashCode();
                hash.Add(this.Versioning);
                hash.Add(this.Unknown1);
                hash.Add(this.Unknown2);
                hash.Add(this.Unknown3);
                hash.Add(this.Unknown4);
                hash.Add(this.Unknown5);
                hash.Add(this.Unknown6);
                hash.Add(this.Unknown7);
                hash.Add(this.Unknown8);
                hash.Add(this.Unknown9);
                hash.Add(this.Unknown10);
                hash.Add(this.Unknown11);
                hash.Add(this.Unknown12);
                hash.Add(this.Unknown13);
                hash.Add(this.Unknown14);
                hash.Add(this.Unknown15);
                hash.Add(this.Unknown16);
                hash.Add(this.Unknown17);
                hash.Add(this.Unknown18);
                hash.Add(this.Unknown19);
                hash.Add(this.Unknown20);
                return hash.ToHashCode();
            }

            #endregion

            #region All
            public bool All(Func<TItem, bool> eval)
            {
                if (!eval(this.Versioning)) return false;
                if (!eval(this.Unknown1)) return false;
                if (!eval(this.Unknown2)) return false;
                if (!eval(this.Unknown3)) return false;
                if (!eval(this.Unknown4)) return false;
                if (!eval(this.Unknown5)) return false;
                if (!eval(this.Unknown6)) return false;
                if (!eval(this.Unknown7)) return false;
                if (!eval(this.Unknown8)) return false;
                if (!eval(this.Unknown9)) return false;
                if (!eval(this.Unknown10)) return false;
                if (!eval(this.Unknown11)) return false;
                if (!eval(this.Unknown12)) return false;
                if (!eval(this.Unknown13)) return false;
                if (!eval(this.Unknown14)) return false;
                if (!eval(this.Unknown15)) return false;
                if (!eval(this.Unknown16)) return false;
                if (!eval(this.Unknown17)) return false;
                if (!eval(this.Unknown18)) return false;
                if (!eval(this.Unknown19)) return false;
                if (!eval(this.Unknown20)) return false;
                return true;
            }
            #endregion

            #region Any
            public bool Any(Func<TItem, bool> eval)
            {
                if (eval(this.Versioning)) return true;
                if (eval(this.Unknown1)) return true;
                if (eval(this.Unknown2)) return true;
                if (eval(this.Unknown3)) return true;
                if (eval(this.Unknown4)) return true;
                if (eval(this.Unknown5)) return true;
                if (eval(this.Unknown6)) return true;
                if (eval(this.Unknown7)) return true;
                if (eval(this.Unknown8)) return true;
                if (eval(this.Unknown9)) return true;
                if (eval(this.Unknown10)) return true;
                if (eval(this.Unknown11)) return true;
                if (eval(this.Unknown12)) return true;
                if (eval(this.Unknown13)) return true;
                if (eval(this.Unknown14)) return true;
                if (eval(this.Unknown15)) return true;
                if (eval(this.Unknown16)) return true;
                if (eval(this.Unknown17)) return true;
                if (eval(this.Unknown18)) return true;
                if (eval(this.Unknown19)) return true;
                if (eval(this.Unknown20)) return true;
                return false;
            }
            #endregion

            #region Translate
            public Mask<R> Translate<R>(Func<TItem, R> eval)
            {
                var ret = new ObjectPlacementDefaults.Mask<R>();
                this.Translate_InternalFill(ret, eval);
                return ret;
            }

            protected void Translate_InternalFill<R>(Mask<R> obj, Func<TItem, R> eval)
            {
                obj.Versioning = eval(this.Versioning);
                obj.Unknown1 = eval(this.Unknown1);
                obj.Unknown2 = eval(this.Unknown2);
                obj.Unknown3 = eval(this.Unknown3);
                obj.Unknown4 = eval(this.Unknown4);
                obj.Unknown5 = eval(this.Unknown5);
                obj.Unknown6 = eval(this.Unknown6);
                obj.Unknown7 = eval(this.Unknown7);
                obj.Unknown8 = eval(this.Unknown8);
                obj.Unknown9 = eval(this.Unknown9);
                obj.Unknown10 = eval(this.Unknown10);
                obj.Unknown11 = eval(this.Unknown11);
                obj.Unknown12 = eval(this.Unknown12);
                obj.Unknown13 = eval(this.Unknown13);
                obj.Unknown14 = eval(this.Unknown14);
                obj.Unknown15 = eval(this.Unknown15);
                obj.Unknown16 = eval(this.Unknown16);
                obj.Unknown17 = eval(this.Unknown17);
                obj.Unknown18 = eval(this.Unknown18);
                obj.Unknown19 = eval(this.Unknown19);
                obj.Unknown20 = eval(this.Unknown20);
            }
            #endregion

            #region To String
            public override string ToString() => this.Print();

            public string Print(ObjectPlacementDefaults.Mask<bool>? printMask = null)
            {
                var sb = new StructuredStringBuilder();
                Print(sb, printMask);
                return sb.ToString();
            }

            public void Print(StructuredStringBuilder sb, ObjectPlacementDefaults.Mask<bool>? printMask = null)
            {
                sb.AppendLine($"{nameof(ObjectPlacementDefaults.Mask<TItem>)} =>");
                using (sb.Brace())
                {
                    if (printMask?.Versioning ?? true)
                    {
                        sb.AppendItem(Versioning, "Versioning");
                    }
                    if (printMask?.Unknown1 ?? true)
                    {
                        sb.AppendItem(Unknown1, "Unknown1");
                    }
                    if (printMask?.Unknown2 ?? true)
                    {
                        sb.AppendItem(Unknown2, "Unknown2");
                    }
                    if (printMask?.Unknown3 ?? true)
                    {
                        sb.AppendItem(Unknown3, "Unknown3");
                    }
                    if (printMask?.Unknown4 ?? true)
                    {
                        sb.AppendItem(Unknown4, "Unknown4");
                    }
                    if (printMask?.Unknown5 ?? true)
                    {
                        sb.AppendItem(Unknown5, "Unknown5");
                    }
                    if (printMask?.Unknown6 ?? true)
                    {
                        sb.AppendItem(Unknown6, "Unknown6");
                    }
                    if (printMask?.Unknown7 ?? true)
                    {
                        sb.AppendItem(Unknown7, "Unknown7");
                    }
                    if (printMask?.Unknown8 ?? true)
                    {
                        sb.AppendItem(Unknown8, "Unknown8");
                    }
                    if (printMask?.Unknown9 ?? true)
                    {
                        sb.AppendItem(Unknown9, "Unknown9");
                    }
                    if (printMask?.Unknown10 ?? true)
                    {
                        sb.AppendItem(Unknown10, "Unknown10");
                    }
                    if (printMask?.Unknown11 ?? true)
                    {
                        sb.AppendItem(Unknown11, "Unknown11");
                    }
                    if (printMask?.Unknown12 ?? true)
                    {
                        sb.AppendItem(Unknown12, "Unknown12");
                    }
                    if (printMask?.Unknown13 ?? true)
                    {
                        sb.AppendItem(Unknown13, "Unknown13");
                    }
                    if (printMask?.Unknown14 ?? true)
                    {
                        sb.AppendItem(Unknown14, "Unknown14");
                    }
                    if (printMask?.Unknown15 ?? true)
                    {
                        sb.AppendItem(Unknown15, "Unknown15");
                    }
                    if (printMask?.Unknown16 ?? true)
                    {
                        sb.AppendItem(Unknown16, "Unknown16");
                    }
                    if (printMask?.Unknown17 ?? true)
                    {
                        sb.AppendItem(Unknown17, "Unknown17");
                    }
                    if (printMask?.Unknown18 ?? true)
                    {
                        sb.AppendItem(Unknown18, "Unknown18");
                    }
                    if (printMask?.Unknown19 ?? true)
                    {
                        sb.AppendItem(Unknown19, "Unknown19");
                    }
                    if (printMask?.Unknown20 ?? true)
                    {
                        sb.AppendItem(Unknown20, "Unknown20");
                    }
                }
            }
            #endregion

        }

        public class ErrorMask :
            IErrorMask,
            IErrorMask<ErrorMask>
        {
            #region Members
            public Exception? Overall { get; set; }
            private List<string>? _warnings;
            public List<string> Warnings
            {
                get
                {
                    if (_warnings == null)
                    {
                        _warnings = new List<string>();
                    }
                    return _warnings;
                }
            }
            public Exception? Versioning;
            public Exception? Unknown1;
            public Exception? Unknown2;
            public Exception? Unknown3;
            public Exception? Unknown4;
            public Exception? Unknown5;
            public Exception? Unknown6;
            public Exception? Unknown7;
            public Exception? Unknown8;
            public Exception? Unknown9;
            public Exception? Unknown10;
            public Exception? Unknown11;
            public Exception? Unknown12;
            public Exception? Unknown13;
            public Exception? Unknown14;
            public Exception? Unknown15;
            public Exception? Unknown16;
            public Exception? Unknown17;
            public Exception? Unknown18;
            public Exception? Unknown19;
            public Exception? Unknown20;
            #endregion

            #region IErrorMask
            public object? GetNthMask(int index)
            {
                ObjectPlacementDefaults_FieldIndex enu = (ObjectPlacementDefaults_FieldIndex)index;
                switch (enu)
                {
                    case ObjectPlacementDefaults_FieldIndex.Versioning:
                        return Versioning;
                    case ObjectPlacementDefaults_FieldIndex.Unknown1:
                        return Unknown1;
                    case ObjectPlacementDefaults_FieldIndex.Unknown2:
                        return Unknown2;
                    case ObjectPlacementDefaults_FieldIndex.Unknown3:
                        return Unknown3;
                    case ObjectPlacementDefaults_FieldIndex.Unknown4:
                        return Unknown4;
                    case ObjectPlacementDefaults_FieldIndex.Unknown5:
                        return Unknown5;
                    case ObjectPlacementDefaults_FieldIndex.Unknown6:
                        return Unknown6;
                    case ObjectPlacementDefaults_FieldIndex.Unknown7:
                        return Unknown7;
                    case ObjectPlacementDefaults_FieldIndex.Unknown8:
                        return Unknown8;
                    case ObjectPlacementDefaults_FieldIndex.Unknown9:
                        return Unknown9;
                    case ObjectPlacementDefaults_FieldIndex.Unknown10:
                        return Unknown10;
                    case ObjectPlacementDefaults_FieldIndex.Unknown11:
                        return Unknown11;
                    case ObjectPlacementDefaults_FieldIndex.Unknown12:
                        return Unknown12;
                    case ObjectPlacementDefaults_FieldIndex.Unknown13:
                        return Unknown13;
                    case ObjectPlacementDefaults_FieldIndex.Unknown14:
                        return Unknown14;
                    case ObjectPlacementDefaults_FieldIndex.Unknown15:
                        return Unknown15;
                    case ObjectPlacementDefaults_FieldIndex.Unknown16:
                        return Unknown16;
                    case ObjectPlacementDefaults_FieldIndex.Unknown17:
                        return Unknown17;
                    case ObjectPlacementDefaults_FieldIndex.Unknown18:
                        return Unknown18;
                    case ObjectPlacementDefaults_FieldIndex.Unknown19:
                        return Unknown19;
                    case ObjectPlacementDefaults_FieldIndex.Unknown20:
                        return Unknown20;
                    default:
                        throw new ArgumentException($"Index is out of range: {index}");
                }
            }

            public void SetNthException(int index, Exception ex)
            {
                ObjectPlacementDefaults_FieldIndex enu = (ObjectPlacementDefaults_FieldIndex)index;
                switch (enu)
                {
                    case ObjectPlacementDefaults_FieldIndex.Versioning:
                        this.Versioning = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown1:
                        this.Unknown1 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown2:
                        this.Unknown2 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown3:
                        this.Unknown3 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown4:
                        this.Unknown4 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown5:
                        this.Unknown5 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown6:
                        this.Unknown6 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown7:
                        this.Unknown7 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown8:
                        this.Unknown8 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown9:
                        this.Unknown9 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown10:
                        this.Unknown10 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown11:
                        this.Unknown11 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown12:
                        this.Unknown12 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown13:
                        this.Unknown13 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown14:
                        this.Unknown14 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown15:
                        this.Unknown15 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown16:
                        this.Unknown16 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown17:
                        this.Unknown17 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown18:
                        this.Unknown18 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown19:
                        this.Unknown19 = ex;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown20:
                        this.Unknown20 = ex;
                        break;
                    default:
                        throw new ArgumentException($"Index is out of range: {index}");
                }
            }

            public void SetNthMask(int index, object obj)
            {
                ObjectPlacementDefaults_FieldIndex enu = (ObjectPlacementDefaults_FieldIndex)index;
                switch (enu)
                {
                    case ObjectPlacementDefaults_FieldIndex.Versioning:
                        this.Versioning = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown1:
                        this.Unknown1 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown2:
                        this.Unknown2 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown3:
                        this.Unknown3 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown4:
                        this.Unknown4 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown5:
                        this.Unknown5 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown6:
                        this.Unknown6 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown7:
                        this.Unknown7 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown8:
                        this.Unknown8 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown9:
                        this.Unknown9 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown10:
                        this.Unknown10 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown11:
                        this.Unknown11 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown12:
                        this.Unknown12 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown13:
                        this.Unknown13 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown14:
                        this.Unknown14 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown15:
                        this.Unknown15 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown16:
                        this.Unknown16 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown17:
                        this.Unknown17 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown18:
                        this.Unknown18 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown19:
                        this.Unknown19 = (Exception?)obj;
                        break;
                    case ObjectPlacementDefaults_FieldIndex.Unknown20:
                        this.Unknown20 = (Exception?)obj;
                        break;
                    default:
                        throw new ArgumentException($"Index is out of range: {index}");
                }
            }

            public bool IsInError()
            {
                if (Overall != null) return true;
                if (Versioning != null) return true;
                if (Unknown1 != null) return true;
                if (Unknown2 != null) return true;
                if (Unknown3 != null) return true;
                if (Unknown4 != null) return true;
                if (Unknown5 != null) return true;
                if (Unknown6 != null) return true;
                if (Unknown7 != null) return true;
                if (Unknown8 != null) return true;
                if (Unknown9 != null) return true;
                if (Unknown10 != null) return true;
                if (Unknown11 != null) return true;
                if (Unknown12 != null) return true;
                if (Unknown13 != null) return true;
                if (Unknown14 != null) return true;
                if (Unknown15 != null) return true;
                if (Unknown16 != null) return true;
                if (Unknown17 != null) return true;
                if (Unknown18 != null) return true;
                if (Unknown19 != null) return true;
                if (Unknown20 != null) return true;
                return false;
            }
            #endregion

            #region To String
            public override string ToString() => this.Print();

            public void Print(StructuredStringBuilder sb, string? name = null)
            {
                sb.AppendLine($"{(name ?? "ErrorMask")} =>");
                using (sb.Brace())
                {
                    if (this.Overall != null)
                    {
                        sb.AppendLine("Overall =>");
                        using (sb.Brace())
                        {
                            sb.AppendLine($"{this.Overall}");
                        }
                    }
                    PrintFillInternal(sb);
                }
            }
            protected void PrintFillInternal(StructuredStringBuilder sb)
            {
                {
                    sb.AppendItem(Versioning, "Versioning");
                }
                {
                    sb.AppendItem(Unknown1, "Unknown1");
                }
                {
                    sb.AppendItem(Unknown2, "Unknown2");
                }
                {
                    sb.AppendItem(Unknown3, "Unknown3");
                }
                {
                    sb.AppendItem(Unknown4, "Unknown4");
                }
                {
                    sb.AppendItem(Unknown5, "Unknown5");
                }
                {
                    sb.AppendItem(Unknown6, "Unknown6");
                }
                {
                    sb.AppendItem(Unknown7, "Unknown7");
                }
                {
                    sb.AppendItem(Unknown8, "Unknown8");
                }
                {
                    sb.AppendItem(Unknown9, "Unknown9");
                }
                {
                    sb.AppendItem(Unknown10, "Unknown10");
                }
                {
                    sb.AppendItem(Unknown11, "Unknown11");
                }
                {
                    sb.AppendItem(Unknown12, "Unknown12");
                }
                {
                    sb.AppendItem(Unknown13, "Unknown13");
                }
                {
                    sb.AppendItem(Unknown14, "Unknown14");
                }
                {
                    sb.AppendItem(Unknown15, "Unknown15");
                }
                {
                    sb.AppendItem(Unknown16, "Unknown16");
                }
                {
                    sb.AppendItem(Unknown17, "Unknown17");
                }
                {
                    sb.AppendItem(Unknown18, "Unknown18");
                }
                {
                    sb.AppendItem(Unknown19, "Unknown19");
                }
                {
                    sb.AppendItem(Unknown20, "Unknown20");
                }
            }
            #endregion

            #region Combine
            public ErrorMask Combine(ErrorMask? rhs)
            {
                if (rhs == null) return this;
                var ret = new ErrorMask();
                ret.Versioning = this.Versioning.Combine(rhs.Versioning);
                ret.Unknown1 = this.Unknown1.Combine(rhs.Unknown1);
                ret.Unknown2 = this.Unknown2.Combine(rhs.Unknown2);
                ret.Unknown3 = this.Unknown3.Combine(rhs.Unknown3);
                ret.Unknown4 = this.Unknown4.Combine(rhs.Unknown4);
                ret.Unknown5 = this.Unknown5.Combine(rhs.Unknown5);
                ret.Unknown6 = this.Unknown6.Combine(rhs.Unknown6);
                ret.Unknown7 = this.Unknown7.Combine(rhs.Unknown7);
                ret.Unknown8 = this.Unknown8.Combine(rhs.Unknown8);
                ret.Unknown9 = this.Unknown9.Combine(rhs.Unknown9);
                ret.Unknown10 = this.Unknown10.Combine(rhs.Unknown10);
                ret.Unknown11 = this.Unknown11.Combine(rhs.Unknown11);
                ret.Unknown12 = this.Unknown12.Combine(rhs.Unknown12);
                ret.Unknown13 = this.Unknown13.Combine(rhs.Unknown13);
                ret.Unknown14 = this.Unknown14.Combine(rhs.Unknown14);
                ret.Unknown15 = this.Unknown15.Combine(rhs.Unknown15);
                ret.Unknown16 = this.Unknown16.Combine(rhs.Unknown16);
                ret.Unknown17 = this.Unknown17.Combine(rhs.Unknown17);
                ret.Unknown18 = this.Unknown18.Combine(rhs.Unknown18);
                ret.Unknown19 = this.Unknown19.Combine(rhs.Unknown19);
                ret.Unknown20 = this.Unknown20.Combine(rhs.Unknown20);
                return ret;
            }
            public static ErrorMask? Combine(ErrorMask? lhs, ErrorMask? rhs)
            {
                if (lhs != null && rhs != null) return lhs.Combine(rhs);
                return lhs ?? rhs;
            }
            #endregion

            #region Factory
            public static ErrorMask Factory(ErrorMaskBuilder errorMask)
            {
                return new ErrorMask();
            }
            #endregion

        }
        public class TranslationMask : ITranslationMask
        {
            #region Members
            private TranslationCrystal? _crystal;
            public readonly bool DefaultOn;
            public bool OnOverall;
            public bool Versioning;
            public bool Unknown1;
            public bool Unknown2;
            public bool Unknown3;
            public bool Unknown4;
            public bool Unknown5;
            public bool Unknown6;
            public bool Unknown7;
            public bool Unknown8;
            public bool Unknown9;
            public bool Unknown10;
            public bool Unknown11;
            public bool Unknown12;
            public bool Unknown13;
            public bool Unknown14;
            public bool Unknown15;
            public bool Unknown16;
            public bool Unknown17;
            public bool Unknown18;
            public bool Unknown19;
            public bool Unknown20;
            #endregion

            #region Ctors
            public TranslationMask(
                bool defaultOn,
                bool onOverall = true)
            {
                this.DefaultOn = defaultOn;
                this.OnOverall = onOverall;
                this.Versioning = defaultOn;
                this.Unknown1 = defaultOn;
                this.Unknown2 = defaultOn;
                this.Unknown3 = defaultOn;
                this.Unknown4 = defaultOn;
                this.Unknown5 = defaultOn;
                this.Unknown6 = defaultOn;
                this.Unknown7 = defaultOn;
                this.Unknown8 = defaultOn;
                this.Unknown9 = defaultOn;
                this.Unknown10 = defaultOn;
                this.Unknown11 = defaultOn;
                this.Unknown12 = defaultOn;
                this.Unknown13 = defaultOn;
                this.Unknown14 = defaultOn;
                this.Unknown15 = defaultOn;
                this.Unknown16 = defaultOn;
                this.Unknown17 = defaultOn;
                this.Unknown18 = defaultOn;
                this.Unknown19 = defaultOn;
                this.Unknown20 = defaultOn;
            }

            #endregion

            public TranslationCrystal GetCrystal()
            {
                if (_crystal != null) return _crystal;
                var ret = new List<(bool On, TranslationCrystal? SubCrystal)>();
                GetCrystal(ret);
                _crystal = new TranslationCrystal(ret.ToArray());
                return _crystal;
            }

            protected void GetCrystal(List<(bool On, TranslationCrystal? SubCrystal)> ret)
            {
                ret.Add((Versioning, null));
                ret.Add((Unknown1, null));
                ret.Add((Unknown2, null));
                ret.Add((Unknown3, null));
                ret.Add((Unknown4, null));
                ret.Add((Unknown5, null));
                ret.Add((Unknown6, null));
                ret.Add((Unknown7, null));
                ret.Add((Unknown8, null));
                ret.Add((Unknown9, null));
                ret.Add((Unknown10, null));
                ret.Add((Unknown11, null));
                ret.Add((Unknown12, null));
                ret.Add((Unknown13, null));
                ret.Add((Unknown14, null));
                ret.Add((Unknown15, null));
                ret.Add((Unknown16, null));
                ret.Add((Unknown17, null));
                ret.Add((Unknown18, null));
                ret.Add((Unknown19, null));
                ret.Add((Unknown20, null));
            }

            public static implicit operator TranslationMask(bool defaultOn)
            {
                return new TranslationMask(defaultOn: defaultOn, onOverall: defaultOn);
            }

        }
        #endregion

        #region Mutagen
        [Flags]
        public enum VersioningBreaks
        {
            Break0 = 1
        }
        #endregion

        #region Binary Translation
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected object BinaryWriteTranslator => ObjectPlacementDefaultsBinaryWriteTranslation.Instance;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        object IBinaryItem.BinaryWriteTranslator => this.BinaryWriteTranslator;
        void IBinaryItem.WriteToBinary(
            MutagenWriter writer,
            TypedWriteParams translationParams = default)
        {
            ((ObjectPlacementDefaultsBinaryWriteTranslation)this.BinaryWriteTranslator).Write(
                item: this,
                writer: writer,
                translationParams: translationParams);
        }
        #region Binary Create
        public static ObjectPlacementDefaults CreateFromBinary(
            MutagenFrame frame,
            TypedParseParams translationParams = default)
        {
            var ret = new ObjectPlacementDefaults();
            ((ObjectPlacementDefaultsSetterCommon)((IObjectPlacementDefaultsGetter)ret).CommonSetterInstance()!).CopyInFromBinary(
                item: ret,
                frame: frame,
                translationParams: translationParams);
            return ret;
        }

        #endregion

        public static bool TryCreateFromBinary(
            MutagenFrame frame,
            out ObjectPlacementDefaults item,
            TypedParseParams translationParams = default)
        {
            var startPos = frame.Position;
            item = CreateFromBinary(
                frame: frame,
                translationParams: translationParams);
            return startPos != frame.Position;
        }
        #endregion

        void IPrintable.Print(StructuredStringBuilder sb, string? name) => this.Print(sb, name);

        void IClearable.Clear()
        {
            ((ObjectPlacementDefaultsSetterCommon)((IObjectPlacementDefaultsGetter)this).CommonSetterInstance()!).Clear(this);
        }

        internal static ObjectPlacementDefaults GetNew()
        {
            return new ObjectPlacementDefaults();
        }

    }
    #endregion

    #region Interface
    public partial interface IObjectPlacementDefaults :
        ILoquiObjectSetter<IObjectPlacementDefaults>,
        IObjectPlacementDefaultsGetter
    {
        new ObjectPlacementDefaults.VersioningBreaks Versioning { get; set; }
        new Single Unknown1 { get; set; }
        new Single Unknown2 { get; set; }
        new Single Unknown3 { get; set; }
        new Single Unknown4 { get; set; }
        new Single Unknown5 { get; set; }
        new Single Unknown6 { get; set; }
        new Single Unknown7 { get; set; }
        new Single Unknown8 { get; set; }
        new Single Unknown9 { get; set; }
        new Single Unknown10 { get; set; }
        new Single Unknown11 { get; set; }
        new Single Unknown12 { get; set; }
        new Single Unknown13 { get; set; }
        new Single Unknown14 { get; set; }
        new Single Unknown15 { get; set; }
        new Single Unknown16 { get; set; }
        new Single Unknown17 { get; set; }
        new Single Unknown18 { get; set; }
        new Single Unknown19 { get; set; }
        new Single Unknown20 { get; set; }
    }

    public partial interface IObjectPlacementDefaultsGetter :
        ILoquiObject,
        IBinaryItem,
        ILoquiObject<IObjectPlacementDefaultsGetter>
    {
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        object CommonInstance();
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        object? CommonSetterInstance();
        [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
        object CommonSetterTranslationInstance();
        static ILoquiRegistration StaticRegistration => ObjectPlacementDefaults_Registration.Instance;
        ObjectPlacementDefaults.VersioningBreaks Versioning { get; }
        Single Unknown1 { get; }
        Single Unknown2 { get; }
        Single Unknown3 { get; }
        Single Unknown4 { get; }
        Single Unknown5 { get; }
        Single Unknown6 { get; }
        Single Unknown7 { get; }
        Single Unknown8 { get; }
        Single Unknown9 { get; }
        Single Unknown10 { get; }
        Single Unknown11 { get; }
        Single Unknown12 { get; }
        Single Unknown13 { get; }
        Single Unknown14 { get; }
        Single Unknown15 { get; }
        Single Unknown16 { get; }
        Single Unknown17 { get; }
        Single Unknown18 { get; }
        Single Unknown19 { get; }
        Single Unknown20 { get; }

    }

    #endregion

    #region Common MixIn
    public static partial class ObjectPlacementDefaultsMixIn
    {
        public static void Clear(this IObjectPlacementDefaults item)
        {
            ((ObjectPlacementDefaultsSetterCommon)((IObjectPlacementDefaultsGetter)item).CommonSetterInstance()!).Clear(item: item);
        }

        public static ObjectPlacementDefaults.Mask<bool> GetEqualsMask(
            this IObjectPlacementDefaultsGetter item,
            IObjectPlacementDefaultsGetter rhs,
            EqualsMaskHelper.Include include = EqualsMaskHelper.Include.All)
        {
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).GetEqualsMask(
                item: item,
                rhs: rhs,
                include: include);
        }

        public static string Print(
            this IObjectPlacementDefaultsGetter item,
            string? name = null,
            ObjectPlacementDefaults.Mask<bool>? printMask = null)
        {
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).Print(
                item: item,
                name: name,
                printMask: printMask);
        }

        public static void Print(
            this IObjectPlacementDefaultsGetter item,
            StructuredStringBuilder sb,
            string? name = null,
            ObjectPlacementDefaults.Mask<bool>? printMask = null)
        {
            ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).Print(
                item: item,
                sb: sb,
                name: name,
                printMask: printMask);
        }

        public static bool Equals(
            this IObjectPlacementDefaultsGetter item,
            IObjectPlacementDefaultsGetter rhs,
            ObjectPlacementDefaults.TranslationMask? equalsMask = null)
        {
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).Equals(
                lhs: item,
                rhs: rhs,
                equalsMask: equalsMask?.GetCrystal());
        }

        public static void DeepCopyIn(
            this IObjectPlacementDefaults lhs,
            IObjectPlacementDefaultsGetter rhs)
        {
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)lhs).CommonSetterTranslationInstance()!).DeepCopyIn(
                item: lhs,
                rhs: rhs,
                errorMask: default,
                copyMask: default,
                deepCopy: false);
        }

        public static void DeepCopyIn(
            this IObjectPlacementDefaults lhs,
            IObjectPlacementDefaultsGetter rhs,
            ObjectPlacementDefaults.TranslationMask? copyMask = null)
        {
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)lhs).CommonSetterTranslationInstance()!).DeepCopyIn(
                item: lhs,
                rhs: rhs,
                errorMask: default,
                copyMask: copyMask?.GetCrystal(),
                deepCopy: false);
        }

        public static void DeepCopyIn(
            this IObjectPlacementDefaults lhs,
            IObjectPlacementDefaultsGetter rhs,
            out ObjectPlacementDefaults.ErrorMask errorMask,
            ObjectPlacementDefaults.TranslationMask? copyMask = null)
        {
            var errorMaskBuilder = new ErrorMaskBuilder();
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)lhs).CommonSetterTranslationInstance()!).DeepCopyIn(
                item: lhs,
                rhs: rhs,
                errorMask: errorMaskBuilder,
                copyMask: copyMask?.GetCrystal(),
                deepCopy: false);
            errorMask = ObjectPlacementDefaults.ErrorMask.Factory(errorMaskBuilder);
        }

        public static void DeepCopyIn(
            this IObjectPlacementDefaults lhs,
            IObjectPlacementDefaultsGetter rhs,
            ErrorMaskBuilder? errorMask,
            TranslationCrystal? copyMask)
        {
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)lhs).CommonSetterTranslationInstance()!).DeepCopyIn(
                item: lhs,
                rhs: rhs,
                errorMask: errorMask,
                copyMask: copyMask,
                deepCopy: false);
        }

        public static ObjectPlacementDefaults DeepCopy(
            this IObjectPlacementDefaultsGetter item,
            ObjectPlacementDefaults.TranslationMask? copyMask = null)
        {
            return ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)item).CommonSetterTranslationInstance()!).DeepCopy(
                item: item,
                copyMask: copyMask);
        }

        public static ObjectPlacementDefaults DeepCopy(
            this IObjectPlacementDefaultsGetter item,
            out ObjectPlacementDefaults.ErrorMask errorMask,
            ObjectPlacementDefaults.TranslationMask? copyMask = null)
        {
            return ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)item).CommonSetterTranslationInstance()!).DeepCopy(
                item: item,
                copyMask: copyMask,
                errorMask: out errorMask);
        }

        public static ObjectPlacementDefaults DeepCopy(
            this IObjectPlacementDefaultsGetter item,
            ErrorMaskBuilder? errorMask,
            TranslationCrystal? copyMask = null)
        {
            return ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)item).CommonSetterTranslationInstance()!).DeepCopy(
                item: item,
                copyMask: copyMask,
                errorMask: errorMask);
        }

        #region Binary Translation
        public static void CopyInFromBinary(
            this IObjectPlacementDefaults item,
            MutagenFrame frame,
            TypedParseParams translationParams = default)
        {
            ((ObjectPlacementDefaultsSetterCommon)((IObjectPlacementDefaultsGetter)item).CommonSetterInstance()!).CopyInFromBinary(
                item: item,
                frame: frame,
                translationParams: translationParams);
        }

        #endregion

    }
    #endregion

}

namespace Mutagen.Bethesda.Starfield
{
    #region Field Index
    internal enum ObjectPlacementDefaults_FieldIndex
    {
        Versioning = 0,
        Unknown1 = 1,
        Unknown2 = 2,
        Unknown3 = 3,
        Unknown4 = 4,
        Unknown5 = 5,
        Unknown6 = 6,
        Unknown7 = 7,
        Unknown8 = 8,
        Unknown9 = 9,
        Unknown10 = 10,
        Unknown11 = 11,
        Unknown12 = 12,
        Unknown13 = 13,
        Unknown14 = 14,
        Unknown15 = 15,
        Unknown16 = 16,
        Unknown17 = 17,
        Unknown18 = 18,
        Unknown19 = 19,
        Unknown20 = 20,
    }
    #endregion

    #region Registration
    internal partial class ObjectPlacementDefaults_Registration : ILoquiRegistration
    {
        public static readonly ObjectPlacementDefaults_Registration Instance = new ObjectPlacementDefaults_Registration();

        public static ProtocolKey ProtocolKey => ProtocolDefinition_Starfield.ProtocolKey;

        public const ushort AdditionalFieldCount = 21;

        public const ushort FieldCount = 21;

        public static readonly Type MaskType = typeof(ObjectPlacementDefaults.Mask<>);

        public static readonly Type ErrorMaskType = typeof(ObjectPlacementDefaults.ErrorMask);

        public static readonly Type ClassType = typeof(ObjectPlacementDefaults);

        public static readonly Type GetterType = typeof(IObjectPlacementDefaultsGetter);

        public static readonly Type? InternalGetterType = null;

        public static readonly Type SetterType = typeof(IObjectPlacementDefaults);

        public static readonly Type? InternalSetterType = null;

        public const string FullName = "Mutagen.Bethesda.Starfield.ObjectPlacementDefaults";

        public const string Name = "ObjectPlacementDefaults";

        public const string Namespace = "Mutagen.Bethesda.Starfield";

        public const byte GenericCount = 0;

        public static readonly Type? GenericRegistrationType = null;

        public static readonly RecordType TriggeringRecordType = RecordTypes.OPDS;
        public static RecordTriggerSpecs TriggerSpecs => _recordSpecs.Value;
        private static readonly Lazy<RecordTriggerSpecs> _recordSpecs = new Lazy<RecordTriggerSpecs>(() =>
        {
            var all = RecordCollection.Factory(RecordTypes.OPDS);
            return new RecordTriggerSpecs(allRecordTypes: all);
        });
        public static readonly Type BinaryWriteTranslation = typeof(ObjectPlacementDefaultsBinaryWriteTranslation);
        #region Interface
        ProtocolKey ILoquiRegistration.ProtocolKey => ProtocolKey;
        ushort ILoquiRegistration.FieldCount => FieldCount;
        ushort ILoquiRegistration.AdditionalFieldCount => AdditionalFieldCount;
        Type ILoquiRegistration.MaskType => MaskType;
        Type ILoquiRegistration.ErrorMaskType => ErrorMaskType;
        Type ILoquiRegistration.ClassType => ClassType;
        Type ILoquiRegistration.SetterType => SetterType;
        Type? ILoquiRegistration.InternalSetterType => InternalSetterType;
        Type ILoquiRegistration.GetterType => GetterType;
        Type? ILoquiRegistration.InternalGetterType => InternalGetterType;
        string ILoquiRegistration.FullName => FullName;
        string ILoquiRegistration.Name => Name;
        string ILoquiRegistration.Namespace => Namespace;
        byte ILoquiRegistration.GenericCount => GenericCount;
        Type? ILoquiRegistration.GenericRegistrationType => GenericRegistrationType;
        ushort? ILoquiRegistration.GetNameIndex(StringCaseAgnostic name) => throw new NotImplementedException();
        bool ILoquiRegistration.GetNthIsEnumerable(ushort index) => throw new NotImplementedException();
        bool ILoquiRegistration.GetNthIsLoqui(ushort index) => throw new NotImplementedException();
        bool ILoquiRegistration.GetNthIsSingleton(ushort index) => throw new NotImplementedException();
        string ILoquiRegistration.GetNthName(ushort index) => throw new NotImplementedException();
        bool ILoquiRegistration.IsNthDerivative(ushort index) => throw new NotImplementedException();
        bool ILoquiRegistration.IsProtected(ushort index) => throw new NotImplementedException();
        Type ILoquiRegistration.GetNthType(ushort index) => throw new NotImplementedException();
        #endregion

    }
    #endregion

    #region Common
    internal partial class ObjectPlacementDefaultsSetterCommon
    {
        public static readonly ObjectPlacementDefaultsSetterCommon Instance = new ObjectPlacementDefaultsSetterCommon();

        partial void ClearPartial();
        
        public void Clear(IObjectPlacementDefaults item)
        {
            ClearPartial();
            item.Versioning = default(ObjectPlacementDefaults.VersioningBreaks);
            item.Unknown1 = default(Single);
            item.Unknown2 = default(Single);
            item.Unknown3 = default(Single);
            item.Unknown4 = default(Single);
            item.Unknown5 = default(Single);
            item.Unknown6 = default(Single);
            item.Unknown7 = default(Single);
            item.Unknown8 = default(Single);
            item.Unknown9 = default(Single);
            item.Unknown10 = default(Single);
            item.Unknown11 = default(Single);
            item.Unknown12 = default(Single);
            item.Unknown13 = default(Single);
            item.Unknown14 = default(Single);
            item.Unknown15 = default(Single);
            item.Unknown16 = default(Single);
            item.Unknown17 = default(Single);
            item.Unknown18 = default(Single);
            item.Unknown19 = default(Single);
            item.Unknown20 = default(Single);
        }
        
        #region Mutagen
        public void RemapLinks(IObjectPlacementDefaults obj, IReadOnlyDictionary<FormKey, FormKey> mapping)
        {
        }
        
        #endregion
        
        #region Binary Translation
        public virtual void CopyInFromBinary(
            IObjectPlacementDefaults item,
            MutagenFrame frame,
            TypedParseParams translationParams)
        {
            frame = frame.SpawnWithFinalPosition(HeaderTranslation.ParseSubrecord(
                frame.Reader,
                translationParams.ConvertToCustom(RecordTypes.OPDS),
                translationParams.LengthOverride));
            PluginUtilityTranslation.SubrecordParse(
                record: item,
                frame: frame,
                translationParams: translationParams,
                fillStructs: ObjectPlacementDefaultsBinaryCreateTranslation.FillBinaryStructs);
        }
        
        #endregion
        
    }
    internal partial class ObjectPlacementDefaultsCommon
    {
        public static readonly ObjectPlacementDefaultsCommon Instance = new ObjectPlacementDefaultsCommon();

        public ObjectPlacementDefaults.Mask<bool> GetEqualsMask(
            IObjectPlacementDefaultsGetter item,
            IObjectPlacementDefaultsGetter rhs,
            EqualsMaskHelper.Include include = EqualsMaskHelper.Include.All)
        {
            var ret = new ObjectPlacementDefaults.Mask<bool>(false);
            ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).FillEqualsMask(
                item: item,
                rhs: rhs,
                ret: ret,
                include: include);
            return ret;
        }
        
        public void FillEqualsMask(
            IObjectPlacementDefaultsGetter item,
            IObjectPlacementDefaultsGetter rhs,
            ObjectPlacementDefaults.Mask<bool> ret,
            EqualsMaskHelper.Include include = EqualsMaskHelper.Include.All)
        {
            ret.Versioning = item.Versioning == rhs.Versioning;
            ret.Unknown1 = item.Unknown1.EqualsWithin(rhs.Unknown1);
            ret.Unknown2 = item.Unknown2.EqualsWithin(rhs.Unknown2);
            ret.Unknown3 = item.Unknown3.EqualsWithin(rhs.Unknown3);
            ret.Unknown4 = item.Unknown4.EqualsWithin(rhs.Unknown4);
            ret.Unknown5 = item.Unknown5.EqualsWithin(rhs.Unknown5);
            ret.Unknown6 = item.Unknown6.EqualsWithin(rhs.Unknown6);
            ret.Unknown7 = item.Unknown7.EqualsWithin(rhs.Unknown7);
            ret.Unknown8 = item.Unknown8.EqualsWithin(rhs.Unknown8);
            ret.Unknown9 = item.Unknown9.EqualsWithin(rhs.Unknown9);
            ret.Unknown10 = item.Unknown10.EqualsWithin(rhs.Unknown10);
            ret.Unknown11 = item.Unknown11.EqualsWithin(rhs.Unknown11);
            ret.Unknown12 = item.Unknown12.EqualsWithin(rhs.Unknown12);
            ret.Unknown13 = item.Unknown13.EqualsWithin(rhs.Unknown13);
            ret.Unknown14 = item.Unknown14.EqualsWithin(rhs.Unknown14);
            ret.Unknown15 = item.Unknown15.EqualsWithin(rhs.Unknown15);
            ret.Unknown16 = item.Unknown16.EqualsWithin(rhs.Unknown16);
            ret.Unknown17 = item.Unknown17.EqualsWithin(rhs.Unknown17);
            ret.Unknown18 = item.Unknown18.EqualsWithin(rhs.Unknown18);
            ret.Unknown19 = item.Unknown19.EqualsWithin(rhs.Unknown19);
            ret.Unknown20 = item.Unknown20.EqualsWithin(rhs.Unknown20);
        }
        
        public string Print(
            IObjectPlacementDefaultsGetter item,
            string? name = null,
            ObjectPlacementDefaults.Mask<bool>? printMask = null)
        {
            var sb = new StructuredStringBuilder();
            Print(
                item: item,
                sb: sb,
                name: name,
                printMask: printMask);
            return sb.ToString();
        }
        
        public void Print(
            IObjectPlacementDefaultsGetter item,
            StructuredStringBuilder sb,
            string? name = null,
            ObjectPlacementDefaults.Mask<bool>? printMask = null)
        {
            if (name == null)
            {
                sb.AppendLine($"ObjectPlacementDefaults =>");
            }
            else
            {
                sb.AppendLine($"{name} (ObjectPlacementDefaults) =>");
            }
            using (sb.Brace())
            {
                ToStringFields(
                    item: item,
                    sb: sb,
                    printMask: printMask);
            }
        }
        
        protected static void ToStringFields(
            IObjectPlacementDefaultsGetter item,
            StructuredStringBuilder sb,
            ObjectPlacementDefaults.Mask<bool>? printMask = null)
        {
            if (printMask?.Versioning ?? true)
            {
                sb.AppendItem(item.Versioning, "Versioning");
            }
            if (printMask?.Unknown1 ?? true)
            {
                sb.AppendItem(item.Unknown1, "Unknown1");
            }
            if (printMask?.Unknown2 ?? true)
            {
                sb.AppendItem(item.Unknown2, "Unknown2");
            }
            if (printMask?.Unknown3 ?? true)
            {
                sb.AppendItem(item.Unknown3, "Unknown3");
            }
            if (printMask?.Unknown4 ?? true)
            {
                sb.AppendItem(item.Unknown4, "Unknown4");
            }
            if (printMask?.Unknown5 ?? true)
            {
                sb.AppendItem(item.Unknown5, "Unknown5");
            }
            if (printMask?.Unknown6 ?? true)
            {
                sb.AppendItem(item.Unknown6, "Unknown6");
            }
            if (printMask?.Unknown7 ?? true)
            {
                sb.AppendItem(item.Unknown7, "Unknown7");
            }
            if (printMask?.Unknown8 ?? true)
            {
                sb.AppendItem(item.Unknown8, "Unknown8");
            }
            if (printMask?.Unknown9 ?? true)
            {
                sb.AppendItem(item.Unknown9, "Unknown9");
            }
            if (printMask?.Unknown10 ?? true)
            {
                sb.AppendItem(item.Unknown10, "Unknown10");
            }
            if (printMask?.Unknown11 ?? true)
            {
                sb.AppendItem(item.Unknown11, "Unknown11");
            }
            if (printMask?.Unknown12 ?? true)
            {
                sb.AppendItem(item.Unknown12, "Unknown12");
            }
            if (printMask?.Unknown13 ?? true)
            {
                sb.AppendItem(item.Unknown13, "Unknown13");
            }
            if (printMask?.Unknown14 ?? true)
            {
                sb.AppendItem(item.Unknown14, "Unknown14");
            }
            if (printMask?.Unknown15 ?? true)
            {
                sb.AppendItem(item.Unknown15, "Unknown15");
            }
            if (printMask?.Unknown16 ?? true)
            {
                sb.AppendItem(item.Unknown16, "Unknown16");
            }
            if (printMask?.Unknown17 ?? true)
            {
                sb.AppendItem(item.Unknown17, "Unknown17");
            }
            if (printMask?.Unknown18 ?? true)
            {
                sb.AppendItem(item.Unknown18, "Unknown18");
            }
            if (printMask?.Unknown19 ?? true)
            {
                sb.AppendItem(item.Unknown19, "Unknown19");
            }
            if (printMask?.Unknown20 ?? true)
            {
                sb.AppendItem(item.Unknown20, "Unknown20");
            }
        }
        
        #region Equals and Hash
        public virtual bool Equals(
            IObjectPlacementDefaultsGetter? lhs,
            IObjectPlacementDefaultsGetter? rhs,
            TranslationCrystal? equalsMask)
        {
            if (!EqualsMaskHelper.RefEquality(lhs, rhs, out var isEqual)) return isEqual;
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Versioning) ?? true))
            {
                if (lhs.Versioning != rhs.Versioning) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown1) ?? true))
            {
                if (!lhs.Unknown1.EqualsWithin(rhs.Unknown1)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown2) ?? true))
            {
                if (!lhs.Unknown2.EqualsWithin(rhs.Unknown2)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown3) ?? true))
            {
                if (!lhs.Unknown3.EqualsWithin(rhs.Unknown3)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown4) ?? true))
            {
                if (!lhs.Unknown4.EqualsWithin(rhs.Unknown4)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown5) ?? true))
            {
                if (!lhs.Unknown5.EqualsWithin(rhs.Unknown5)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown6) ?? true))
            {
                if (!lhs.Unknown6.EqualsWithin(rhs.Unknown6)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown7) ?? true))
            {
                if (!lhs.Unknown7.EqualsWithin(rhs.Unknown7)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown8) ?? true))
            {
                if (!lhs.Unknown8.EqualsWithin(rhs.Unknown8)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown9) ?? true))
            {
                if (!lhs.Unknown9.EqualsWithin(rhs.Unknown9)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown10) ?? true))
            {
                if (!lhs.Unknown10.EqualsWithin(rhs.Unknown10)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown11) ?? true))
            {
                if (!lhs.Unknown11.EqualsWithin(rhs.Unknown11)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown12) ?? true))
            {
                if (!lhs.Unknown12.EqualsWithin(rhs.Unknown12)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown13) ?? true))
            {
                if (!lhs.Unknown13.EqualsWithin(rhs.Unknown13)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown14) ?? true))
            {
                if (!lhs.Unknown14.EqualsWithin(rhs.Unknown14)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown15) ?? true))
            {
                if (!lhs.Unknown15.EqualsWithin(rhs.Unknown15)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown16) ?? true))
            {
                if (!lhs.Unknown16.EqualsWithin(rhs.Unknown16)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown17) ?? true))
            {
                if (!lhs.Unknown17.EqualsWithin(rhs.Unknown17)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown18) ?? true))
            {
                if (!lhs.Unknown18.EqualsWithin(rhs.Unknown18)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown19) ?? true))
            {
                if (!lhs.Unknown19.EqualsWithin(rhs.Unknown19)) return false;
            }
            if ((equalsMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown20) ?? true))
            {
                if (!lhs.Unknown20.EqualsWithin(rhs.Unknown20)) return false;
            }
            return true;
        }
        
        public virtual int GetHashCode(IObjectPlacementDefaultsGetter item)
        {
            var hash = new HashCode();
            hash.Add(item.Versioning);
            hash.Add(item.Unknown1);
            hash.Add(item.Unknown2);
            hash.Add(item.Unknown3);
            hash.Add(item.Unknown4);
            hash.Add(item.Unknown5);
            hash.Add(item.Unknown6);
            hash.Add(item.Unknown7);
            hash.Add(item.Unknown8);
            hash.Add(item.Unknown9);
            hash.Add(item.Unknown10);
            hash.Add(item.Unknown11);
            hash.Add(item.Unknown12);
            hash.Add(item.Unknown13);
            hash.Add(item.Unknown14);
            hash.Add(item.Unknown15);
            hash.Add(item.Unknown16);
            hash.Add(item.Unknown17);
            hash.Add(item.Unknown18);
            hash.Add(item.Unknown19);
            hash.Add(item.Unknown20);
            return hash.ToHashCode();
        }
        
        #endregion
        
        
        public object GetNew()
        {
            return ObjectPlacementDefaults.GetNew();
        }
        
        #region Mutagen
        public IEnumerable<IFormLinkGetter> EnumerateFormLinks(IObjectPlacementDefaultsGetter obj)
        {
            yield break;
        }
        
        #endregion
        
    }
    internal partial class ObjectPlacementDefaultsSetterTranslationCommon
    {
        public static readonly ObjectPlacementDefaultsSetterTranslationCommon Instance = new ObjectPlacementDefaultsSetterTranslationCommon();

        #region DeepCopyIn
        public void DeepCopyIn(
            IObjectPlacementDefaults item,
            IObjectPlacementDefaultsGetter rhs,
            ErrorMaskBuilder? errorMask,
            TranslationCrystal? copyMask,
            bool deepCopy)
        {
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Versioning) ?? true))
            {
                item.Versioning = rhs.Versioning;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown1) ?? true))
            {
                item.Unknown1 = rhs.Unknown1;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown2) ?? true))
            {
                item.Unknown2 = rhs.Unknown2;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown3) ?? true))
            {
                item.Unknown3 = rhs.Unknown3;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown4) ?? true))
            {
                item.Unknown4 = rhs.Unknown4;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown5) ?? true))
            {
                item.Unknown5 = rhs.Unknown5;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown6) ?? true))
            {
                item.Unknown6 = rhs.Unknown6;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown7) ?? true))
            {
                item.Unknown7 = rhs.Unknown7;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown8) ?? true))
            {
                item.Unknown8 = rhs.Unknown8;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown9) ?? true))
            {
                item.Unknown9 = rhs.Unknown9;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown10) ?? true))
            {
                item.Unknown10 = rhs.Unknown10;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown11) ?? true))
            {
                item.Unknown11 = rhs.Unknown11;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown12) ?? true))
            {
                item.Unknown12 = rhs.Unknown12;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown13) ?? true))
            {
                item.Unknown13 = rhs.Unknown13;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown14) ?? true))
            {
                item.Unknown14 = rhs.Unknown14;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown15) ?? true))
            {
                item.Unknown15 = rhs.Unknown15;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown16) ?? true))
            {
                item.Unknown16 = rhs.Unknown16;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown17) ?? true))
            {
                item.Unknown17 = rhs.Unknown17;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown18) ?? true))
            {
                item.Unknown18 = rhs.Unknown18;
            }
            if (rhs.Versioning.HasFlag(ObjectPlacementDefaults.VersioningBreaks.Break0)) return;
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown19) ?? true))
            {
                item.Unknown19 = rhs.Unknown19;
            }
            if ((copyMask?.GetShouldTranslate((int)ObjectPlacementDefaults_FieldIndex.Unknown20) ?? true))
            {
                item.Unknown20 = rhs.Unknown20;
            }
            DeepCopyInCustom(
                item: item,
                rhs: rhs,
                errorMask: errorMask,
                copyMask: copyMask,
                deepCopy: deepCopy);
        }
        
        partial void DeepCopyInCustom(
            IObjectPlacementDefaults item,
            IObjectPlacementDefaultsGetter rhs,
            ErrorMaskBuilder? errorMask,
            TranslationCrystal? copyMask,
            bool deepCopy);
        #endregion
        
        public ObjectPlacementDefaults DeepCopy(
            IObjectPlacementDefaultsGetter item,
            ObjectPlacementDefaults.TranslationMask? copyMask = null)
        {
            ObjectPlacementDefaults ret = (ObjectPlacementDefaults)((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).GetNew();
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)ret).CommonSetterTranslationInstance()!).DeepCopyIn(
                item: ret,
                rhs: item,
                errorMask: null,
                copyMask: copyMask?.GetCrystal(),
                deepCopy: true);
            return ret;
        }
        
        public ObjectPlacementDefaults DeepCopy(
            IObjectPlacementDefaultsGetter item,
            out ObjectPlacementDefaults.ErrorMask errorMask,
            ObjectPlacementDefaults.TranslationMask? copyMask = null)
        {
            var errorMaskBuilder = new ErrorMaskBuilder();
            ObjectPlacementDefaults ret = (ObjectPlacementDefaults)((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).GetNew();
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)ret).CommonSetterTranslationInstance()!).DeepCopyIn(
                ret,
                item,
                errorMask: errorMaskBuilder,
                copyMask: copyMask?.GetCrystal(),
                deepCopy: true);
            errorMask = ObjectPlacementDefaults.ErrorMask.Factory(errorMaskBuilder);
            return ret;
        }
        
        public ObjectPlacementDefaults DeepCopy(
            IObjectPlacementDefaultsGetter item,
            ErrorMaskBuilder? errorMask,
            TranslationCrystal? copyMask = null)
        {
            ObjectPlacementDefaults ret = (ObjectPlacementDefaults)((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)item).CommonInstance()!).GetNew();
            ((ObjectPlacementDefaultsSetterTranslationCommon)((IObjectPlacementDefaultsGetter)ret).CommonSetterTranslationInstance()!).DeepCopyIn(
                item: ret,
                rhs: item,
                errorMask: errorMask,
                copyMask: copyMask,
                deepCopy: true);
            return ret;
        }
        
    }
    #endregion

}

namespace Mutagen.Bethesda.Starfield
{
    public partial class ObjectPlacementDefaults
    {
        #region Common Routing
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILoquiRegistration ILoquiObject.Registration => ObjectPlacementDefaults_Registration.Instance;
        public static ILoquiRegistration StaticRegistration => ObjectPlacementDefaults_Registration.Instance;
        [DebuggerStepThrough]
        protected object CommonInstance() => ObjectPlacementDefaultsCommon.Instance;
        [DebuggerStepThrough]
        protected object CommonSetterInstance()
        {
            return ObjectPlacementDefaultsSetterCommon.Instance;
        }
        [DebuggerStepThrough]
        protected object CommonSetterTranslationInstance() => ObjectPlacementDefaultsSetterTranslationCommon.Instance;
        [DebuggerStepThrough]
        object IObjectPlacementDefaultsGetter.CommonInstance() => this.CommonInstance();
        [DebuggerStepThrough]
        object IObjectPlacementDefaultsGetter.CommonSetterInstance() => this.CommonSetterInstance();
        [DebuggerStepThrough]
        object IObjectPlacementDefaultsGetter.CommonSetterTranslationInstance() => this.CommonSetterTranslationInstance();

        #endregion

    }
}

#region Modules
#region Binary Translation
namespace Mutagen.Bethesda.Starfield
{
    public partial class ObjectPlacementDefaultsBinaryWriteTranslation : IBinaryWriteTranslator
    {
        public static readonly ObjectPlacementDefaultsBinaryWriteTranslation Instance = new();

        public static void WriteEmbedded(
            IObjectPlacementDefaultsGetter item,
            MutagenWriter writer)
        {
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown1);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown2);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown3);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown4);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown5);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown6);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown7);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown8);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown9);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown10);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown11);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown12);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown13);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown14);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown15);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown16);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown17);
            FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                writer: writer,
                item: item.Unknown18);
            if (!item.Versioning.HasFlag(ObjectPlacementDefaults.VersioningBreaks.Break0))
            {
                FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                    writer: writer,
                    item: item.Unknown19);
                FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Write(
                    writer: writer,
                    item: item.Unknown20);
            }
        }

        public void Write(
            MutagenWriter writer,
            IObjectPlacementDefaultsGetter item,
            TypedWriteParams translationParams)
        {
            using (HeaderExport.Subrecord(
                writer: writer,
                record: translationParams.ConvertToCustom(RecordTypes.OPDS),
                overflowRecord: translationParams.OverflowRecordType,
                out var writerToUse))
            {
                WriteEmbedded(
                    item: item,
                    writer: writerToUse);
            }
        }

        public void Write(
            MutagenWriter writer,
            object item,
            TypedWriteParams translationParams = default)
        {
            Write(
                item: (IObjectPlacementDefaultsGetter)item,
                writer: writer,
                translationParams: translationParams);
        }

    }

    internal partial class ObjectPlacementDefaultsBinaryCreateTranslation
    {
        public static readonly ObjectPlacementDefaultsBinaryCreateTranslation Instance = new ObjectPlacementDefaultsBinaryCreateTranslation();

        public static void FillBinaryStructs(
            IObjectPlacementDefaults item,
            MutagenFrame frame)
        {
            item.Unknown1 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown2 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown3 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown4 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown5 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown6 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown7 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown8 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown9 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown10 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown11 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown12 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown13 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown14 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown15 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown16 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown17 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown18 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            if (frame.Complete)
            {
                item.Versioning |= ObjectPlacementDefaults.VersioningBreaks.Break0;
                return;
            }
            item.Unknown19 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
            item.Unknown20 = FloatBinaryTranslation<MutagenFrame, MutagenWriter>.Instance.Parse(reader: frame);
        }

    }

}
namespace Mutagen.Bethesda.Starfield
{
    #region Binary Write Mixins
    public static class ObjectPlacementDefaultsBinaryTranslationMixIn
    {
        public static void WriteToBinary(
            this IObjectPlacementDefaultsGetter item,
            MutagenWriter writer,
            TypedWriteParams translationParams = default)
        {
            ((ObjectPlacementDefaultsBinaryWriteTranslation)item.BinaryWriteTranslator).Write(
                item: item,
                writer: writer,
                translationParams: translationParams);
        }

    }
    #endregion


}
namespace Mutagen.Bethesda.Starfield
{
    internal partial class ObjectPlacementDefaultsBinaryOverlay :
        PluginBinaryOverlay,
        IObjectPlacementDefaultsGetter
    {
        #region Common Routing
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        ILoquiRegistration ILoquiObject.Registration => ObjectPlacementDefaults_Registration.Instance;
        public static ILoquiRegistration StaticRegistration => ObjectPlacementDefaults_Registration.Instance;
        [DebuggerStepThrough]
        protected object CommonInstance() => ObjectPlacementDefaultsCommon.Instance;
        [DebuggerStepThrough]
        protected object CommonSetterTranslationInstance() => ObjectPlacementDefaultsSetterTranslationCommon.Instance;
        [DebuggerStepThrough]
        object IObjectPlacementDefaultsGetter.CommonInstance() => this.CommonInstance();
        [DebuggerStepThrough]
        object? IObjectPlacementDefaultsGetter.CommonSetterInstance() => null;
        [DebuggerStepThrough]
        object IObjectPlacementDefaultsGetter.CommonSetterTranslationInstance() => this.CommonSetterTranslationInstance();

        #endregion

        void IPrintable.Print(StructuredStringBuilder sb, string? name) => this.Print(sb, name);

        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        protected object BinaryWriteTranslator => ObjectPlacementDefaultsBinaryWriteTranslation.Instance;
        [DebuggerBrowsable(DebuggerBrowsableState.Never)]
        object IBinaryItem.BinaryWriteTranslator => this.BinaryWriteTranslator;
        void IBinaryItem.WriteToBinary(
            MutagenWriter writer,
            TypedWriteParams translationParams = default)
        {
            ((ObjectPlacementDefaultsBinaryWriteTranslation)this.BinaryWriteTranslator).Write(
                item: this,
                writer: writer,
                translationParams: translationParams);
        }

        public ObjectPlacementDefaults.VersioningBreaks Versioning { get; private set; }
        public Single Unknown1 => _structData.Slice(0x0, 0x4).Float();
        public Single Unknown2 => _structData.Slice(0x4, 0x4).Float();
        public Single Unknown3 => _structData.Slice(0x8, 0x4).Float();
        public Single Unknown4 => _structData.Slice(0xC, 0x4).Float();
        public Single Unknown5 => _structData.Slice(0x10, 0x4).Float();
        public Single Unknown6 => _structData.Slice(0x14, 0x4).Float();
        public Single Unknown7 => _structData.Slice(0x18, 0x4).Float();
        public Single Unknown8 => _structData.Slice(0x1C, 0x4).Float();
        public Single Unknown9 => _structData.Slice(0x20, 0x4).Float();
        public Single Unknown10 => _structData.Slice(0x24, 0x4).Float();
        public Single Unknown11 => _structData.Slice(0x28, 0x4).Float();
        public Single Unknown12 => _structData.Slice(0x2C, 0x4).Float();
        public Single Unknown13 => _structData.Slice(0x30, 0x4).Float();
        public Single Unknown14 => _structData.Slice(0x34, 0x4).Float();
        public Single Unknown15 => _structData.Slice(0x38, 0x4).Float();
        public Single Unknown16 => _structData.Slice(0x3C, 0x4).Float();
        public Single Unknown17 => _structData.Slice(0x40, 0x4).Float();
        public Single Unknown18 => _structData.Slice(0x44, 0x4).Float();
        public Single Unknown19 => _structData.Length <= 0x48 ? default : _structData.Slice(0x48, 0x4).Float();
        public Single Unknown20 => _structData.Length <= 0x4C ? default : _structData.Slice(0x4C, 0x4).Float();
        partial void CustomFactoryEnd(
            OverlayStream stream,
            int finalPos,
            int offset);

        partial void CustomCtor();
        protected ObjectPlacementDefaultsBinaryOverlay(
            MemoryPair memoryPair,
            BinaryOverlayFactoryPackage package)
            : base(
                memoryPair: memoryPair,
                package: package)
        {
            this.CustomCtor();
        }

        public static IObjectPlacementDefaultsGetter ObjectPlacementDefaultsFactory(
            OverlayStream stream,
            BinaryOverlayFactoryPackage package,
            TypedParseParams translationParams = default)
        {
            stream = ExtractSubrecordStructMemory(
                stream: stream,
                meta: package.MetaData.Constants,
                translationParams: translationParams,
                length: 0x50,
                memoryPair: out var memoryPair,
                offset: out var offset);
            var ret = new ObjectPlacementDefaultsBinaryOverlay(
                memoryPair: memoryPair,
                package: package);
            if (ret._structData.Length <= 0x48)
            {
                ret.Versioning |= ObjectPlacementDefaults.VersioningBreaks.Break0;
            }
            ret.CustomFactoryEnd(
                stream: stream,
                finalPos: stream.Length,
                offset: offset);
            return ret;
        }

        public static IObjectPlacementDefaultsGetter ObjectPlacementDefaultsFactory(
            ReadOnlyMemorySlice<byte> slice,
            BinaryOverlayFactoryPackage package,
            TypedParseParams translationParams = default)
        {
            return ObjectPlacementDefaultsFactory(
                stream: new OverlayStream(slice, package),
                package: package,
                translationParams: translationParams);
        }

        #region To String

        public void Print(
            StructuredStringBuilder sb,
            string? name = null)
        {
            ObjectPlacementDefaultsMixIn.Print(
                item: this,
                sb: sb,
                name: name);
        }

        #endregion

        #region Equals and Hash
        public override bool Equals(object? obj)
        {
            if (obj is not IObjectPlacementDefaultsGetter rhs) return false;
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)this).CommonInstance()!).Equals(this, rhs, equalsMask: null);
        }

        public bool Equals(IObjectPlacementDefaultsGetter? obj)
        {
            return ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)this).CommonInstance()!).Equals(this, obj, equalsMask: null);
        }

        public override int GetHashCode() => ((ObjectPlacementDefaultsCommon)((IObjectPlacementDefaultsGetter)this).CommonInstance()!).GetHashCode(this);

        #endregion

    }

}
#endregion

#endregion

